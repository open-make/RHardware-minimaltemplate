
# Development stages

The documentation will grow with your project.
Usually, an hardware project follows different stages of development, which may be seen as particular milestones where the team check that they gathered enough information and documented their process, before going to the next stage. 

The guide propose 5 stages of developement:
- ideation
- specification (needs analysis)
- concept development
- protoyping
- replication phase

## From prototype, to demonstrator and market ready product

 When some ideas to address a particular need are tested, the process is called prototyping. After many iterations and testing, a prototype will be selected for further development. The design that solves the needs but is not yet complete nor ready to be replicated (usually because some parts are not well documented or requires a lot of manual adjustments) is called a demonstrator. When the design and documentation are polished and are ready to be used by hardware producers, the hardware is usually labeled as a market-ready product.

### Document when you already have a prototype {#sec-if-you-have-a-prototype}

We expect some (or even most) readers will come to this documentation template when they actually already have a prototype, and are mostly interested in the documentation of the technical parts of the project (mostly what will be in the 04_hardware folder). Most of the advantages of documenting the project exhaustively will then be obsolete, and authors may want to restrict the document to its essentials.

As explained in the FAQ though, all elements may be important and we encourage everyone to go through each steps (even rapidely), making short description of what they had in mind when developing the project so far. 
These descriptions may be shorter than what you would have written if done earlier, but it may be important to ask these different questions, even when the project seems quite advanced.
So, our advice is to look at the checklists of each step also when you have a prototype. You may want to use the provided template "Full_Project_prototype", going rapidly through it to get to some documentation done fast. 

*There are different degrees for how open an OSH project can be, but every step in this direction is welcome and an opportunity to contribute to better research and open new career paths.*


The process may help you to refine the scope of your project, potentially help you find your users and facilitate discussions with other contributors or investors.





## Step 1 Ideation

### Ideation

At this step, you want to share your idea, usually with a small number of people, and want to "test the water".

### Checklist ideation

This should all be included in the readme file:

-   [ ] General information

    -   [ ] name of the project
    -   [ ] development stage: idea generation
    -   [ ] *type of hardware, subject area*
    -   [ ] **License(s)** @sec-license-and-rights
    -   [ ] FOR WHO IS MADE THIS DOCUMENT @sec-community-building
    -   [ ] short problem description @sec-problem-description

-   [ ] vision and motivations @sec-vision-and-motivation

-   [ ] Contributions

    -   [ ] List of team members / contributors @sec-list-of-team-members-contributors

    -   [ ] skills required, who could contribute (at this point) @sec-who-could-contribute

    -   [ ] contact point information / communication channel and tools used for communication (this can also be one email address) @sec-communication-channel-how-to-contribute

-   [ ] Funding information

    -   [ ] List of Sponsors and funding @sec-sponsors-and-funding
    -   [ ] List of putative funding opportunities @sec-future-funding-opportunities


## Step 2 Specification, Needs analysis 

### Needs and ecosystem analysis

Using a open source hardware canva to analyse the project may be useful at this point (defining users, contributors, communication channels, resources required).

A lot of the user analysis and the problem description part aims at the definition of the constrains and requirements for the hardware which is included in the product development part of the documentation.

It may also be time to work on community engagement.

### Checklist specifications

-   [ ] Complete the readme file
    -   [ ] development stage: needs analysis
    -   [ ] *ethics statement (human/animal use or Informed Consent Statement)* @sec-ethics-statement
    -   [ ] *competing interest* @sec-competing-interest
    -   [ ] future work (@sec-future-work), roadmap (@sec-roadmap)
    -   [ ] *Project history summary* @sec-project-history-summary
    -   [ ] longer problem description @sec-problem-description
    -   [ ] Documentation structure @sec-documentation-structure
-   [ ] Contributions
    -   [ ] Contribution guidelines @sec-community-guidelines
    -   [ ] work culture that you want to promote @sec-community-work-culture
    -   [ ] Code of conduct @sec-community-code-of-conduct
    -   [ ] Governance @sec-community-governance
-   [ ] User analysis (this can be a personas analysis)
    -   [ ] Ecosystem analysis (`stakeholder`) @sec-diverse-actors-and-ecosystem
    -   [ ] target groups (who will use the product) @sec-user-analysis-target-groups
    -   [ ] External interfaces (how will they use the product) @sec-user-analysis-external-interfaces
    -   [ ] skills needed to use @sec-user-skills
-   [ ] Product development
    -   [ ] requirements @sec-product-development-requirements
    -   [ ] constrains @sec-product-dev-constrains
    -   [ ] capability @sec-productdvt-capability
-   [ ] History
    -   [ ] *changes log* @sec-project-history-changelog


## Step 3: Concept development

### Concept development

After having an idea and defining the problems, now is time to look at putative solution.
This step aims at researching the technology that will be best adapted to fulfill the requirement and constrains.

If possible, one should try to define the **Modular architecture** of the hardware, which describes **architecture of functions and instructions of the product**.

An important part of this step is the research of similar project.
You may end up joining an existing community and extending (adding a new module) or adapting an (or combining several) existing open hardware solutions.

Usually, this step ends with a redefinition of the needs and vision, and the three first steps often are iteratively determined until a concept is chosen for the first prototype.

> Durability and repairability constrains should be included at this point of the design.
> While this will be mostly documented in step 5 with repair and disassembly instructions, these concepts should be incorporated early in the design.

### FBS design methodology

The concept phase is the main design phase of the hardware.
While in practice, it is often made in parallel to the prototyping, larger project should invest some time at this step, and the use of the Function-Behaviour-Structure (FBS) design approach will facilitate future co-design (see @sec-fbs-modeling):

-   **Function (F)** stands for **“what the object is for”.**
-   **Behaviour (B)** stands for **“what the object does”.**
-   **Structure (S)** stands for **“what the object consists of”.**

### Checklist concept development

-   [ ] Complete the readme file
    -   [ ] development stage: concept development
    -   [ ] dependencies @sec-dependencies
    -   [ ] *conclusions* @sec-conclusions
    -   [ ] software used for development @sec-software-used-for-development
    -   [ ] harware summary overview @sec-hardware-summary-overview
-   [ ] History
    -   [ ] release note @sec-project-history-releasenotes
    -   [ ] design_choices @sec-designchoices
    -   [ ] update change log @sec-project-history-changelog
-   [ ] Product development
    -   [ ] update hardwareoverview
        -   [ ] application, use cases @sec-use-cases-and-application
        -   [ ] \*reuse potential @*sec-reuse-possibilities
        -   [ ] main architectural structure \@sec-structural-model
        -   [ ] \*foreseen cost + time cost @*sec-foreseen-cost
    -   [ ] functional model @sec-functional-model
    -   [ ] Behavioral model @sec-behavioral-model
    -   [ ] Similar projects @sec-similar-projects


## Step 4: product development and prototyping 

### Prototyping

Here the work on the design starts! Continuous documentation of choice made, successes and failures are welcome, so this step has an iterative components: with every development can come specific documentation.

In addition, the documentation may need to be performed for different parts (or modules) of the hardware.

Importantly, the Product design, manufacturing and assembling instruction may be organised using different strategies. Some projects may write simple text files like the rest of the documentation; other projects may using Gitbuilding to write the assembly instruction, and deriving the bill of material from it; other projects may derive assembly instructions from their CAD files.

This step is also divided in two: a preparatory phase defining the main components and an iterative phase which can change with the different version of the hardware.

It is adviced to read the introductory chapters on hardware production @sec-production, including information on modularisation of the hardware @sec-modularisation. 


### Checklist 4a: preparations

- [ ] Complete the readme file
  - [ ] development stage: prototyping
  - [ ] Standard compliance @sec-standard-compliance
  - [ ] Product outputs (if relevant: data outputs) @sec-outputs-products-and-data
  - [ ] Citing information @sec-cite-this-project

  
- [ ] Product development
  - [ ] Structural architecture
    - [ ] Mechanical architecture @sec-mechanical-architecture
    - [ ] Software/firmware architecture @sec-software-and-firmware-architecture
    - [ ] Electrical design architecture @sec-electrical-architecture

### Checklist 4b: iteration of design
- [ ] Complete the readme file
  - [ ] Update Documentation structure 
  - [ ] Dependencies

- [ ] Product design (for each part/module)
  - [ ] Bill of material @sec-product-build-bill-of-material
  - [ ] material characteristics @sec-product-build-material-characteristics
  - [ ] electrical design @sec-product-buildelectrical-design
  - [ ] Software: Documentation of different parts @sec-product-build-firmwaresoftware
  - [ ] Product design and CAD files @sec-product-design-and-cad-files
  
- [ ] Manufacturing instructions  
    - [ ] Manufacturing safety, skills and tools @sec-product-build-manufacturing-all
    - [ ] Manufacturing sequences and instruction @sec-product-build-manufacturing-instructions
    
- [ ] Assembly instructions
  - [ ] assembly skills and tools @sec-product-build-assembly-skills-and-tools
  - [ ] Safety information @sec-safety-instruction-assembly
  - [ ] Assembly sequence and instruction @sec-product-build-assembly-instructions

- [ ] User guide
  - [ ] Safety information @sec-user-guides-safety-information
  - [ ] overview of the hardware @sec-user-guides-overview-of-the-hardware
  - [ ] Operation instructions @sec-operation-instructions
      - [ ] Calibration instructions @sec-user-guides-calibration
  - [ ] Testing instructions and troubleshooting @sec-user-guides-troubleshooting
  - [ ] basic maintenance + schedule @sec-maintenance
  
- [ ] History  
  - [ ] update changelog/release note
  - [ ] update design choice history



## Step 5: replicator step

### Replication and maturation

Here the prototype is mature enough that it should be replicated in different places. While most of the work was already present at step 4, here we go into more quality and details.

### Checklist replication

- [ ] Complete the readme file
  - [ ] development stage: replication ready
  - [ ] scientific publication @sec-scientific-publication
  - [ ] education resources @sec-education-resources
  - [ ] Institutional Review Board Statement @sec-institutional-review-board-statement
  - [ ] discussions @sec-discussions
  - [ ] validation @sec-validation
  - [ ] cost 
  
- [ ] Assembly instructions
  - [ ] disassembly instructions @sec-disassembly

- [ ] Product design
  - [ ] component lifespan @sec-component-lifespan
  
- [ ] User guide
  - [ ] Environmental management @sec-user-guidesenvironmental-management
  - [ ] Maintenance @sec-maintenance 
      - [ ] Instructions @sec-maintenance-instructions
      - [ ] Schedules @sec-maintenance-schedules
      - [ ] Summary component lifetime or links @sec-component-lifespan
  - [ ] Repair @sec-user-guides-repair
      - [ ] Identifying the defective components @sec-identifying-the-defective-components
      - [ ] Repairing the defective components @sec-repairing-the-defective-components  
      - [ ] Replacing equipment components @sec-identifying-the-defective-components 
  - [ ] Disposal instructions




