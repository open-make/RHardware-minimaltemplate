
## Structural model {#sec-structural-model}

This section will give an overview of the structural model, while details are given in the specific mechanical (also called architectural, @sec-mechanical-architecture), electrical (@sec-electrical-architecture) and software (@sec-software-and-firmware-architecture) architectures sections.
Note that sometimes, these different models are presented together in a single graphics.

The Structural model explains the physical structure of the product and its components, it is:

-   A description of the components (the combination of parts) of a product and their relationships.
-   An opportunity to specify the geometric elements, dimensions, topology, and other physical properties of the product.
-   The potential solutions (concepts), which are the result of the conceptual design phase.
-   The set of mechanics theories that obey physical laws required to study and predict the behavior of structures.

**Why should you define structural model?**

-   A structural model helps to describe the geometric elements (design feature, dimensions, constraints, etc.), topology (assembly constraint between components, tolerances, components mating conditions, etc.), and characteristics of the product.
-   A structural model helps to decide the physical form of the product and its components to ensure that the structure is fit for its intended purpose.
-   Structural model provides users with a physical model of the product, components, and characteristics of the material at the design phase that enable the stakeholder to understand the geometry, material reaction to external factors, etc.
-   The structural model ensures that the structures are safe and fulfill the functions for which they were built.

**How should you define structural model?**

The first level of definition is often to show how things are related together in a tree or graph, using "modeling language" such as "SysML (Block Definition, Activity, or Internal Block diagram)" or "UML".

Several software may help create these graphs:

-   Papyrus
-   Modelio
-   Capella
-   diagrams.net (previously draw.io)
-   <https://excalidraw.com>

------------------------------------------------------------------------

**Sources**

OpenNext work project resutls: @sec-open-next-work


## Mechanical architecture {#sec-mechanical-architecture}

The architectural structure is a physical or logical layout of the components of a system design and their internal and external connections.

-   A model specifying the kind of components and their sub-components in the format of a tree or a graph

See for information about how to document this.
Provide both an image and the editable files, as well as instruction how to use them.

> Examples MPS ventilator: ![Image of architecture of MPS ventilator](img/mechanical-model.jpg) {width=400}

------------------------------------------------------------------------

**Sources**

OpenNext work project resutls: @sec-open-next-work


## product dvt - Design models

### Providing the design

Model design should be provided in a format that can be used to manufacture each piece (usually STL file for 3D and SVG file for 2D design).


### Modelling a design in an editable file format 

 
An editable file format is a standard way that information is encoded for storage and allows the makers to study, modify the geometry of a model and reuse it.


To reuse a design model, it should provide information consist of:

 1. Preferable 3D/2D file format
   - Editable file formats that could be:
     - Native formats such as .FCStd format of FreeCAD 
     - Neutral formats such as STEP files
 2. Preferable open-source software 
   - OpensCAD
   - Inkscape
   - FreeCAD


<details>
  <summary>Click to see the examples!</summary>
 
#### *Example of editable file formats:* 

*1. [Farmbot, Native CAD files](https://genesis.farm.bot/v1.5/Extras/cad)*

*2. [MIT Emergency Ventilator, Neutral CAD files](https://e-vent.mit.edu/resources/downloads/)*

*3. Types of CAD format of [transmagic](https://transmagic.com/cad-formats/)*
</details>

#### Template of file format

 #### Documentation a design in an editable file format
  1. 3D/2D file format
     * Native formats
     * Neutral formats
  2. Name of software
     * FreeCAD
     * ...

 
### Characteristics of the materials
<details>
  <summary>Click to see the guideline!</summary>
 
- **Definition:** *The characteristics of the materials are those that identify the reactions of materials reactions to heat, electricity, light, force, etc.* 

  - *Selection of materials  based on factors including properties for [behavioral](https://github.com/OPEN-NEXT/wp2.3_template/tree/main/Documentation/3.%20Design/Behavioral%20model) analysis, [environmental impact](https://github.com/OPEN-NEXT/wp2.3_Guideline-for-documentation-of-OSH-design-reuse/tree/main/Documentation/8.%20Disposal), [manufacturing](https://github.com/OPEN-NEXT/wp2.3_template/tree/main/Documentation/4.%20Manufacturing) processes in design reuse.* 

```
  The material characteristics of mechanical parts consist of: 
  
  1- Identifying the kind of characteristics and their properties: 
  
    - Mechanical characteristics like hardness, elasticity, plasticity, toughness, etc. 
    - Manufacturing properties like castability, machinability rating, etc.
    - Thermal characteristics like melting point, thermal conductivity, etc.
    - Electrical characteristics like electrical resistivity and conductibility, etc.
    - Chemical properties like corrosion resistance, surface tension, etc.
     
  ```
  </details>
  
  <details>
  <summary>Click to see the examples!</summary>
 
  #### *Example of material characteristics*:
  
*Figure below shows some physical properties of superalloy base elements.*

![Image of material characteristics](img/material_characteristics_example.jpg)

> Source: Kutz, M. ed., 2002. Handbook of materials selection. John Wiley & Sons.
  </details>
  
#### Template of material Characteristics
 
  #### Documentation of material characteristics
  1. Name of characteristic
     * Properties
     * Unit of property
     * ...
 
 
 ------------------------------------------------------------------------

**Sources**

OpenNext work project resutls: @sec-open-next-work



## Software and Firmware architecture {#sec-software-and-firmware-architecture}

The software architecture represents the repository details of all the software and firmware that is necessary for reusing and running the project.

See @sec-structural-model for information about how to document this.
Provide both an image and the editable files, as well as instruction how to use them.


### Details

Please provide :

-   Clear installation guide
-   Description of programming algorithm\
-   The source code
-   Version of software and its dependencies (both hardware and software dependencies)

### Documentation of different parts of software 

> Examples:
>
> [Nasa-JPL](https://github.com/nasa-jpl/open-source-rover/tree/master/software)\*
>
> [AmboVent](https://github.com/AmboVent-1690-108/AmboVent/tree/master/3-Software)\*
>
> [Poppy project](https://docs.poppy-project.org/en/installation/)\*

------------------------------------------------------------------------

**Sources**

OpenNext work project resutls: @sec-open-next-work


## Electrical architecture {#sec-electrical-architecture}

The architectural structure is a physical or logical layout of the components of a system design and their internal and external connections.

1.  What minimum documentation should the architectural structure provide?

    -   A model specifying the kind of components and their sub-components in the format of a tree or a graph including
        -   DC motor
        -   A/D converter
        -   DC converters\
        -   Rotor
        -   Sensor system
        -   Motherboard
        -   kit
        -   Resistor
        -   Transistors
        -   IC
        -   Sensors
        -   Etc.

See \@sec-structural-model for information about how to document this.
Provide both an image and the editable files, as well as instruction how to use them.

> example
>
> ![Image of Structural graph of Open-Source-Ventilator](img/elecstructure.png)

### Details and editable format: PCB design

To reuse a electrical design, it should provide information consist of:

1.  Preferable file format

-   Editable file formats that could be:
    -   Source formats such as .gbr, .lib format\
    -   Neutral formats such as Kicad_mod, kicad_pcb

2.  Preferable open-source software

-   Tiny CAD
-   KiCAD
-   ADINA

> Examples:
>
> [Nasa-JPL, source files](https://github.com/nasa-jpl/open-source-rover/tree/master/electrical/pcb/arduino_uno_sheild/gerbers/rev_b)\*
>
> [AmbovVent, Neutral files](https://github.com/AmboVent-1690-108/AmboVent/tree/master/1-Electronics)\*

------------------------------------------------------------------------

**Sources**

OpenNext work project resutls: @sec-open-next-work

